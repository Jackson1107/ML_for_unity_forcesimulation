一、回测引擎更新日志1

作者: 陈卓杰
时间: 2018/10/12 12:03
改动文件：runBacktesting.py, ctaBacktesting.py, ctaTemplate.py
同时新增一个策略文件：strategy_DoubleMA.py

1、runBacktesting.py改动说明
(1) 使用的策略为双均线策略, 数据为数字货币XBT合约;
(2) 添加了合约保证金比例的设置, 初始资金的设置, 和策略名的设置


2、ctaBacktesing.py变动说明

(1) 大约1838行, initStrategy()函数：
删掉self.strategy.onInit(), 原因是此时初始化数据还没准备好, 执行策略的初始化没有意义。

连接数据库、初始化数据读取部分大改

(2) 在104行添加：self.dbCollection = None    # 数据库集合

(3) 在大约1733行 runBacktesting()函数里面添加：
        # 连接数据库
        host, port, log = loadMongoSetting()
        self.dbClient = pymongo.MongoClient(host, port)
        self.dbCollection = self.dbClient[self.dbName][self.symbol]
        
(4) 大约在1748行，runBacktesting()函数func = self.newTick之后全部修改为：
        self.output(u'开始回测')
        self.output(u'开始回放数据')

        # 初始化策略
        # 初始化数据的时间范围（前闭后开）
        flt = {'datetime': {'$gte': self.dataStartDate,
                            '$lt': self.strategyStartDate}}
        # 读取数据
        initCursor = self.dbCollection.find(flt).sort('datetime', pymongo.ASCENDING)
        self.initData = []
        for d in initCursor:
            data = dataClass()
            data.__dict__ = d
            self.initData.append(data)
        # 策略执行初始化
        self.strategy.onInit()
        self.strategy.inited = True
        self.output(u'策略初始化完成')

        # 策略启动
        self.strategy.onStart()
        self.strategy.trading = True
        self.output(u'策略启动完成')

        # 循环加载回放数据
        self.runHistoryDataFromMongo()

        self.output(u'数据回放结束')

(5) 大约在1770附近，runHistoryDataFromMongo()函数，删除前面的：
        host, port, log = loadMongoSetting()

        self.dbClient = pymongo.MongoClient(host, port)
        collection = self.dbClient[self.dbName][self.symbol]

        self.output(u'开始载入数据')
        
(6) runHistoryDataFromMongo()函数，大约1792行，修改为：
        testdays = (self.dataEndDate - self.strategyStartDate).days
  
(6) runHistoryDataFromMongo()函数，大约1800行，修改为：
            testday = self.strategyStartDate + timedelta(days=i)
            
(7) runHistoryDataFromMongo()函数，大约1809行，修改为：
            initCursor = self.dbCollection.find(flt).sort('datetime', pymongo.ASCENDING)
            
(8) 大约在2763行，calculateBacktestingResult(), 修改为：
        # 获取最小交易单位
        try:
            tradeUnit = self.strategy.fixedSize
        except:
            tradeUnit = 1  # 最小交易单位

        longid = EMPTY_STRING
        shortid = EMPTY_STRING


3、ctaTemplate.py变动说明

(1) 242行loadBar()函数修改为：
    #----------------------------------------------------------------------
    def loadBar(self):
        """读取bar数据"""
        return self.ctaEngine.loadBar()



二、回测引擎更新日志2

作者: 陈卓杰
时间: 2018/10/15 12:00
改动文件：runBacktesting.py, ctaBacktesting.py, ctaTemplate.py

1、runBacktesting.py

(1) 添加一个新的回测函数，runBacktestingSimple(), 一次性推送完数据, 而不是每一天读取和推送
大约在1750行;

(2) 添加了几个引擎变量, self.dailyResultDict, self.dfDaily, self.resultDaily,
self.resultTrade, self.tradeResultListz, self.strategySavingPath, 主要用于评价指标的计算,
在__init__() 函数中声明;

(3) 添加一个新的计算回测结果程序, calculateBacktestingResult2(), 原理与原版的vnpy一致
大约在3079行;

(4) 添加了一个记录每日收益的类 DailyResult, 大约在4068行;

(5) 添加了一个更新每日收盘价的函数, updateDailyClose(), 大约在3289行;

(6) 添加了一个计算日线相关指标的函数, calculateDailyResult(), 大约在3299行;

(7) 添加了一个计算交易收益和日线收益的集合函数, showBacktestingResult2(), 大约在3711行;

(8) 添加了一个导出成交记录和每日净值csv的函数, exportBacktestResult(), 大约在3535行;

(9) 添加了一个打印策略评价指标并将其保存到本地txt文件的函数, writeEvaluation(), 大约在2286行;

(10) 添加了一个单独画图的函数, plotResult(), 大约在3799行.



三、回测引擎更新日志3

作者: 陈卓杰
时间: 2018/10/22 xx:xx
改动文件：runBacktesting.py, ctaBacktesting.py, ctaTemplate.py

1、runBacktesting.py改动

(1) 删除了套利回测函数, 删除了除了mongodb以外的数据读取方式, 删除了其他的回测函数, 只保留用到的回测函数；

(2) 在runBacktestingSimple()中使用新的K线对象；















